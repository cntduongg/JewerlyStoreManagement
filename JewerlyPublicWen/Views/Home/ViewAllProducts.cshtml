﻿@{
ViewBag.Title = "Tất Cả Sản Phẩm";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Luxury Header Section -->
<section class="luxury-products-header">
    <div class="container">
        <div class="luxury-section-header" data-aos="fade-up">
            <div class="section-top-line"></div>
            <h1 class="section-title-luxury">BỘ SƯU TẬP TOÀN BỘ</h1>
            <p class="section-subtitle">Khám phá tất cả thiết kế độc quyền của chúng tôi</p>
        </div>
    </div>
</section>

<!-- Luxury Filter & Sort Section -->
<section class="luxury-controls-section">
    <div class="container">
        <div class="luxury-controls-grid">
            <!-- Filter Group -->
            <div class="control-group">
                <div class="filter-item">
                    <i class="fas fa-filter filter-icon"></i>
                    <select id="categoryFilter" class="luxury-select" onchange="filterProducts()">
                        <option value="">TẤT CẢ DANH MỤC</option>
                        <option value="1">NHẪN CAO CẤP</option>
                        <option value="2">DÂY CHUYỀN SANG TRỌNG</option>
                        <option value="3">VÒNG TAY TINH XẢO</option>
                        <option value="4">BÔNG TAI LẤP LÁNH</option>
                        <option value="5">MẶT DÂY ĐỘC ĐÁO</option>
                    </select>
                </div>

                <div class="filter-item">
                    <i class="fas fa-sort filter-icon"></i>
                    <select id="sortFilter" class="luxury-select" onchange="sortProducts()">
                        <option value="newest">MỚI NHẤT</option>
                        <option value="price_asc">GIÁ: THẤP → CAO</option>
                        <option value="price_desc">GIÁ: CAO → THẤP</option>
                        <option value="name_asc">TÊN: A-Z</option>
                        <option value="name_desc">TÊN: Z-A</option>
                    </select>
                </div>
            </div>

            <!-- Search Group -->
            <div class="control-group">
                <div class="filter-item">
                    <i class="fas fa-search filter-icon"></i>
                    <div class="luxury-search-container">
                        <input type="text" id="searchInput" class="luxury-search"
                               placeholder="Tìm kiếm sản phẩm..." onkeyup="handleSearch()">
                        <button class="search-btn-luxury" onclick="handleSearch()">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Results Info -->
        <div class="results-info" id="resultsInfo">
            <span id="productCount">0</span> sản phẩm được tìm thấy
        </div>
    </div>
</section>

<!-- Luxury Products Grid Section -->
<section class="luxury-products-grid-section">
    <div class="container">
        <!-- Loading State -->
        <div id="loadingSpinner" class="luxury-loading">
            <div class="luxury-spinner">
                <div class="diamond-spinner">
                    <div class="diamond-inner"></div>
                </div>
                <p>Đang tải bộ sưu tập...</p>
            </div>
        </div>

        <!-- Products Grid -->
        <div id="productsGrid" class="luxury-products-grid">
            <!-- Products will be loaded here -->
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="luxury-empty-state" style="display: none;">
            <div class="empty-content">
                <i class="fas fa-gem"></i>
                <h3>Không tìm thấy sản phẩm</h3>
                <p>Hãy thử tìm kiếm với từ khóa khác</p>
                <button class="btn-luxury-secondary" onclick="clearFilters()">
                    XÓA BỘ LỌC
                </button>
            </div>
        </div>

        <!-- Error State -->
        <div id="errorState" class="luxury-error-state" style="display: none;">
            <div class="error-content">
                <i class="fas fa-exclamation-triangle"></i>
                <h3 id="errorMessage">Đã xảy ra lỗi</h3>
                <button class="btn-luxury-secondary" onclick="loadProducts()">
                    THỬ LẠI
                </button>
            </div>
        </div>

        <!-- Pagination -->
        <div id="pagination" class="luxury-pagination" style="display: none;"></div>
    </div>
</section>

@section Scripts {
    <script>
        // ==================================================
        // CONFIGURATION
        // ==================================================
        const API_URL = 'https://localhost:7114/api/Products/GetAllProducts';
        let allProducts = [];
        let currentPage = 1;
        const productsPerPage = 12;
        let currentFilters = {
            category: '',
            search: '',
            sort: 'newest'
        };

        // ==================================================
        // MAIN FUNCTIONS
        // ==================================================
        async function loadProducts() {
            showLuxuryLoading();
            hideLuxuryError();
            hideEmptyState();

            try {
                console.log('Loading all products...');
                const response = await fetch(API_URL);

                if (response.ok) {
                    const products = await response.json();
                    allProducts = products;
                    applyFiltersAndDisplay();
                } else {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
            } catch (error) {
                console.error('Products API Error:', error);
                showLuxuryError('Không thể tải sản phẩm: ' + error.message);
                // Fallback to mock data
                allProducts = getMockProducts();
                applyFiltersAndDisplay();
            } finally {
                hideLuxuryLoading();
            }
        }

        function applyFiltersAndDisplay() {
            let filteredProducts = [...allProducts];

            // Apply category filter
            if (currentFilters.category) {
                filteredProducts = filteredProducts.filter(product =>
                    product.categoryId == currentFilters.category
                );
            }

            // Apply search filter
            if (currentFilters.search) {
                const searchTerm = currentFilters.search.toLowerCase();
                filteredProducts = filteredProducts.filter(product =>
                    product.productName.toLowerCase().includes(searchTerm) ||
                    (product.categoryName && product.categoryName.toLowerCase().includes(searchTerm)) ||
                    (product.shortDescription && product.shortDescription.toLowerCase().includes(searchTerm))
                );
            }

            // Apply sorting
            filteredProducts = sortProductsList(filteredProducts, currentFilters.sort);

            // Update results count
            updateResultsCount(filteredProducts.length);

            // Display products
            displayProductsGrid(filteredProducts);
            setupPagination(filteredProducts);
        }

        function displayProductsGrid(products) {
            const grid = document.getElementById('productsGrid');
            const emptyState = document.getElementById('emptyState');

            grid.innerHTML = '';

            if (!products || products.length === 0) {
                grid.style.display = 'none';
                emptyState.style.display = 'flex';
                document.getElementById('pagination').style.display = 'none';
                return;
            }

            grid.style.display = 'grid';
            emptyState.style.display = 'none';

            // Calculate pagination
            const startIndex = (currentPage - 1) * productsPerPage;
            const endIndex = startIndex + productsPerPage;
            const paginatedProducts = products.slice(startIndex, endIndex);

            paginatedProducts.forEach((product, index) => {
                const imageUrl = getLuxuryImageUrl(product);
                const animationDelay = (index % 12) * 100;

                const productHtml = `
                    <div class="luxury-product-grid-card" data-aos="fade-up" data-aos-delay="${animationDelay}">
                        <div class="product-grid-card-inner">
                            <div class="product-image-container">
                                <div class="product-shine"></div>
                                <img src="${imageUrl}"
                                     alt="${product.productName}"
                                     class="luxury-product-image">
                                <div class="product-overlay">
                                    <div class="luxury-badge-card">${product.hasGem ? 'CÓ ĐÁ QUÝ' : 'KHÔNG CÓ ĐÁ'}</div>
                                    <button class="quick-view-btn" onclick="viewProductDetail(${product.productId})">
                                        <i class="fas fa-eye"></i>
                                        XEM CHI TIẾT
                                    </button>
                                </div>
                            </div>

                            <div class="luxury-product-info">
                                <div class="product-category">${product.categoryName || 'TRANG SỨC CAO CẤP'}</div>
                                <h3 class="product-title">${product.productName}</h3>
                                <p class="product-description">${product.shortDescription || 'Thiết kế độc quyền sang trọng'}</p>

                                <div class="product-specs">
                                    <div class="spec-item">
                                        <i class="fas fa-weight-hanging"></i>
                                        <span>${getGoldWeightDisplay(product)}</span>
                                    </div>
                                    <div class="spec-item">
                                        <i class="fas fa-gem"></i>
                                        <span>${product.material || 'Vàng 18K'}</span>
                                    </div>
                                </div>

                                <div class="product-price-section">
                                    <div class="price-wrapper">
                                        <div class="price">${formatCurrency(product.sellingPrice)}</div>
                                    </div>
                                    <button class="btn-luxury-view" onclick="viewProductDetail(${product.productId})">
                                        CHI TIẾT
                                        <i class="fas fa-arrow-right"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                grid.innerHTML += productHtml;
            });
        }

        // ==================================================
        // FILTER & SORT FUNCTIONS
        // ==================================================
        function filterProducts() {
            currentFilters.category = document.getElementById('categoryFilter').value;
            currentPage = 1;
            applyFiltersAndDisplay();
        }

        function sortProducts() {
            currentFilters.sort = document.getElementById('sortFilter').value;
            applyFiltersAndDisplay();
        }

        function handleSearch() {
            currentFilters.search = document.getElementById('searchInput').value.toLowerCase();
            currentPage = 1;
            applyFiltersAndDisplay();
        }

        function sortProductsList(products, sortType) {
            switch (sortType) {
                case 'price_asc':
                    return products.sort((a, b) => (a.sellingPrice || 0) - (b.sellingPrice || 0));
                case 'price_desc':
                    return products.sort((a, b) => (b.sellingPrice || 0) - (a.sellingPrice || 0));
                case 'name_asc':
                    return products.sort((a, b) => (a.productName || '').localeCompare(b.productName || ''));
                case 'name_desc':
                    return products.sort((a, b) => (b.productName || '').localeCompare(a.productName || ''));
                case 'newest':
                default:
                    return products.sort((a, b) => (b.productId || 0) - (a.productId || 0));
            }
        }

        function clearFilters() {
            document.getElementById('categoryFilter').value = '';
            document.getElementById('searchInput').value = '';
            document.getElementById('sortFilter').value = 'newest';

            currentFilters = {
                category: '',
                search: '',
                sort: 'newest'
            };
            currentPage = 1;

            applyFiltersAndDisplay();
        }

        // ==================================================
        // PAGINATION FUNCTIONS
        // ==================================================
        function setupPagination(products) {
            const totalPages = Math.ceil(products.length / productsPerPage);
            const pagination = document.getElementById('pagination');

            if (totalPages <= 1) {
                pagination.style.display = 'none';
                return;
            }

            pagination.style.display = 'flex';
            pagination.innerHTML = '';

            // Previous button
            if (currentPage > 1) {
                pagination.innerHTML += `
                    <button class="pagination-btn" onclick="changePage(${currentPage - 1})">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                `;
            }

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                if (i === 1 || i === totalPages || (i >= currentPage - 1 && i <= currentPage + 1)) {
                    pagination.innerHTML += `
                        <button class="pagination-btn ${i === currentPage ? 'active' : ''}"
                                onclick="changePage(${i})">
                            ${i}
                        </button>
                    `;
                } else if (i === currentPage - 2 || i === currentPage + 2) {
                    pagination.innerHTML += `<span class="pagination-ellipsis">...</span>`;
                }
            }

            // Next button
            if (currentPage < totalPages) {
                pagination.innerHTML += `
                    <button class="pagination-btn" onclick="changePage(${currentPage + 1})">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                `;
            }
        }

        function changePage(page) {
            currentPage = page;
            applyFiltersAndDisplay();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        // ==================================================
        // UTILITY FUNCTIONS (Reuse from Index)
        // ==================================================
        function getLuxuryImageUrl(product) {
            const rawImageUrl = product.mainImageUrl || product.MainImageUrl;

            if (!rawImageUrl || rawImageUrl.includes('img00') || !rawImageUrl.startsWith('http')) {
                const luxuryImages = {
                    1: 'https://images.unsplash.com/photo-1605100804763-247f67b3557e?w=400&h=400&fit=crop',
                    2: 'https://images.unsplash.com/photo-1599643478518-a784e5dc4c8f?w=400&h=400&fit=crop',
                    3: 'https://images.unsplash.com/photo-1588444650700-6c7f0c89d36b?w=400&h=400&fit=crop',
                    4: 'https://images.unsplash.com/photo-1535632066927-ab7c9ab60908?w=400&h=400&fit=crop',
                    5: 'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=400&h=400&fit=crop'
                };
                return luxuryImages[product.categoryId] || luxuryImages[2];
            }
            return rawImageUrl;
        }

        function formatCurrency(amount) {
            if (!amount && amount !== 0) return 'LIÊN HỆ';
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }

        function getGoldWeightDisplay(product) {
            const goldWeight = product.goldWeight || product.GoldWeight || product.goldweight;
            if (!goldWeight && goldWeight !== 0) return 'Vàng cao cấp';
            if (goldWeight === 0) return 'Bạch kim';
            return `${goldWeight}g vàng`;
        }

        function updateResultsCount(count) {
            document.getElementById('productCount').textContent = count;
            document.getElementById('resultsInfo').style.display = count > 0 ? 'block' : 'none';
        }

        function showLuxuryLoading() {
            document.getElementById('loadingSpinner').style.display = 'flex';
        }

        function hideLuxuryLoading() {
            document.getElementById('loadingSpinner').style.display = 'none';
        }

        function showLuxuryError(message) {
            document.getElementById('errorMessage').textContent = message;
            document.getElementById('errorState').style.display = 'flex';
        }

        function hideLuxuryError() {
            document.getElementById('errorState').style.display = 'none';
        }

        function hideEmptyState() {
            document.getElementById('emptyState').style.display = 'none';
        }

        function viewProductDetail(productId) {
            console.log('Viewing product detail:', productId);
            // Redirect to product detail page
            // window.location.href = `/Products/Detail/${productId}`;
        }

        function getMockProducts() {
            // Extended mock data for testing
            return [
                {
                    productId: 1,
                    productName: "Nhẫn Vàng 18K Kim Cương",
                    categoryName: "NHẪN CAO CẤP",
                    categoryId: 1,
                    sellingPrice: 18500000,
                    goldWeight: 5.2,
                    material: "Vàng 18K",
                    hasGem: true,
                    shortDescription: "Nhẫn vàng cao cấp đính kim cương tự nhiên"
                },
                {
                    productId: 2,
                    productName: "Dây Chuyền Vàng Trắng",
                    categoryName: "DÂY CHUYỀN SANG TRỌNG",
                    categoryId: 2,
                    sellingPrice: 12500000,
                    goldWeight: 8.5,
                    material: "Vàng trắng 18K",
                    hasGem: false,
                    shortDescription: "Dây chuyền vàng trắng thanh lịch"
                },
                {
                    productId: 3,
                    productName: "Vòng Tay Ngọc Trai",
                    categoryName: "VÒNG TAY TINH XẢO",
                    categoryId: 3,
                    sellingPrice: 8500000,
                    goldWeight: 3.2,
                    material: "Vàng hồng 18K",
                    hasGem: true,
                    shortDescription: "Vòng tay kết hợp vàng hồng và ngọc trai"
                }
            ];
        }

        // ==================================================
        // INITIALIZATION
        // ==================================================
        document.addEventListener('DOMContentLoaded', function() {
            loadProducts();
        });
    </script>

    <style>
        /* ==================== LUXURY PRODUCTS GRID STYLES ==================== */
        .luxury-products-header {
            padding: 4rem 0 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }

        .luxury-controls-section {
            padding: 2rem 0;
            background: white;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .luxury-controls-grid {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 2rem;
            flex-wrap: wrap;
        }

        .control-group {
            display: flex;
            gap: 1.5rem;
            flex-wrap: wrap;
        }

        .results-info {
            text-align: center;
            margin-top: 1.5rem;
            color: #666;
            font-weight: 600;
            display: none;
        }

        .luxury-products-grid-section {
            padding: 2rem 0 5rem;
            background: #f8f9fa;
            min-height: 60vh;
        }

        .luxury-products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            margin: 2rem 0;
        }

        .luxury-product-grid-card {
            perspective: 1000px;
        }

        .product-grid-card-inner {
            position: relative;
            width: 100%;
            height: 500px;
            transition: var(--transition-smooth);
            transform-style: preserve-3d;
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .luxury-product-grid-card:hover .product-grid-card-inner {
            transform: translateY(-10px);
            box-shadow: 0 20px 60px rgba(212, 175, 55, 0.25);
        }

        /* Reuse product card styles from Index */
        .product-image-container {
            position: relative;
            height: 250px;
            overflow: hidden;
            border-radius: 20px 20px 0 0;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }

        .product-shine {
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.4) 50%, transparent 70%);
            animation: shine 3s infinite;
            z-index: 1;
        }

        .luxury-product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: var(--transition-smooth);
            position: relative;
            z-index: 2;
        }

        .luxury-product-grid-card:hover .luxury-product-image {
            transform: scale(1.05);
        }

        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0,0,0,0.85) 0%, rgba(26,26,26,0.75) 100%);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transition: var(--transition-smooth);
            z-index: 3;
        }

        .luxury-product-grid-card:hover .product-overlay {
            opacity: 1;
        }

        .luxury-product-info {
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 0.8rem;
            height: calc(100% - 250px);
        }

        /* Pagination Styles */
        .luxury-pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-top: 3rem;
            flex-wrap: wrap;
        }

        .pagination-btn {
            width: 45px;
            height: 45px;
            border: 2px solid var(--luxury-gold);
            background: white;
            color: var(--luxury-gold);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition-smooth);
            font-weight: 700;
        }

            .pagination-btn:hover {
                background: var(--luxury-gold);
                color: white;
                transform: translateY(-2px);
            }

            .pagination-btn.active {
                background: var(--luxury-gold);
                color: white;
            }

        .pagination-ellipsis {
            padding: 0 1rem;
            color: #666;
            font-weight: 700;
        }

        /* Reuse existing styles from Index */
        .luxury-badge-card,
        .quick-view-btn,
        .product-category,
        .product-title,
        .product-description,
        .product-specs,
        .spec-item,
        .product-price-section,
        .price-wrapper,
        .price,
        .btn-luxury-view {
            /* All these styles are reused from Index */
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .luxury-controls-grid {
                flex-direction: column;
                gap: 1rem;
            }

            .control-group {
                width: 100%;
                justify-content: center;
            }

            .filter-item {
                width: 100%;
            }

            .luxury-select,
            .luxury-search {
                min-width: 100%;
            }

            .luxury-products-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 1.5rem;
            }

            .product-grid-card-inner {
                height: 480px;
            }
        }

        @@media (max-width: 480px) {
            .luxury-products-grid {
                grid-template-columns: 1fr;
            }

            .pagination-btn {
                width: 40px;
                height: 40px;
                font-size: 0.9rem;
            }
        }
    </style>
}